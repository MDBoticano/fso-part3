{"version":3,"sources":["components/Filter.js","components/Form.js","components/Notification.js","components/Person.js","components/Persons.js","services/phonebookService.js","App.js","index.js"],"names":["Filter","props","react_default","a","createElement","value","myFilter","onChange","eventHandler","Form","_ref","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Notification","status","notificationStyleNeutral","color","background","fontSize","borderStyle","borderRadius","padding","margin","styleToUse","statusType","Object","objectSpread","className","style","Person","name","number","deleteHandler","Fragment","onClick","Persons","newFilter","persons","deleteEntryAt","personsToShow","array","insensitiveFilter","toLowerCase","filter","person","includes","filterSearch","map","components_Person","key","id","baseUrl","getEntries","axios","get","then","response","console","log","data","phonebookService","newEntry","post","put","concat","request","delete","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","statusMessage","setStatusMessage","_useState11","_useState12","setStatusType","useEffect","retrievedEntries","updateNumberOf","entry","find","entryID","modifiedEntry","returnedEntry","updateNameOf","catch","error","setTimeout","p","components_Notification","components_Filter","event","target","components_Form","preventDefault","nameExists","undefined","numberExists","alert","window","confirm","phonebookEntry","date","Date","toISOString","components_Persons","idName","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6b0c3d91.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      filter shown with <input value={props.myFilter} onChange={props.eventHandler}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = ({ handleSubmit, newName, handleNameChange, newNumber, \r\n  handleNumberChange }) => {\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        number: \r\n        <input value={newNumber} onChange={handleNumberChange} type=\"tel\"/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" >add</button>\r\n      </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Notification = ({ status, statusType }) => {\r\n  const notificationStyleNeutral = {\r\n    color: 'black',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '0 5px 10px 5px'\r\n  }\r\n\r\n  const notificationStyleSuccess = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '0 5px 10px 5px'\r\n  }\r\n\r\n  const notificationStyleError = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '0 5px 10px 5px'\r\n  }\r\n\r\n  const notificationStyleWarning = {\r\n    color: 'orange',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '0 5px 10px 5px'\r\n  }\r\n\r\n  let styleToUse = {};\r\n  switch (statusType) {\r\n    case '':\r\n      styleToUse = { ...notificationStyleNeutral };\r\n      break;\r\n    case 'success':\r\n      styleToUse = { ...notificationStyleSuccess };\r\n      break;\r\n    case 'warning':\r\n      styleToUse = { ...notificationStyleWarning };\r\n      break;\r\n    case 'error':\r\n      styleToUse = { ...notificationStyleError };\r\n      break;\r\n    default:\r\n        styleToUse = { ...notificationStyleNeutral };\r\n        break;\r\n  }\r\n\r\n\r\n\r\n  if (status === '' || status === null) {\r\n    return null\r\n    // } else if ( (status !== '' || status !== null) && statusType === 'success') {\r\n    //   return (\r\n    //     <div className=\"status\" style={notificationStyleSuccess}>\r\n    //       {status}\r\n    //     </div>\r\n    //   )\r\n    // } else if ( (status !== '' || status !== null) && statusType === 'error') {\r\n    //   return (\r\n    //     <div className=\"status\" style={notificationStyleError}>\r\n    //       {status}\r\n    //     </div>\r\n    //   )\r\n    // } else if ( (status !== '' || status !== null) && statusType === 'warning') {\r\n    //   return (\r\n    //     <div className=\"status\" style={notificationStyleWarning}>\r\n    //       {status}\r\n    //     </div>\r\n    //   )\r\n  }\r\n\r\n  return (\r\n    <div className=\"status\" style={styleToUse}>\r\n      {status}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Person = ({ name, number, deleteHandler }) => {\r\n\r\n  const deleteThisEntry = () => {\r\n    deleteHandler()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {name} {number} { }\r\n        <button onClick={deleteThisEntry}>Delete</button>\r\n      </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ newFilter, persons, deleteEntryAt }) => {\r\n\r\n  const filterSearch = (array) => {\r\n    const insensitiveFilter = newFilter.toLowerCase();\r\n    return array.filter(person => \r\n      person.name.toLowerCase().includes(insensitiveFilter))\r\n  }\r\n\r\n  const personsToShow = filterSearch(persons);\r\n  \r\n  const listPersons = () => personsToShow.map(person => \r\n    <Person \r\n      key={person.name} name={person.name} number={person.number} \r\n      deleteHandler={() => deleteEntryAt(person.id)}\r\n    />\r\n  )\r\n  \r\n  return (\r\n    <div>\r\n      {listPersons()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getEntries = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n      console.log('Retrieved server data')\r\n      return response.data\r\n    })\r\n}\r\n\r\nconst createEntry = (newEntry) => {\r\n  const request = axios.post(baseUrl, newEntry)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updateEntry = (id, newEntry) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newEntry)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteEntry = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  console.log('Deleted entry at id', `${id}`)\r\n  return request.then(() => {\r\n    // axios.delete by default doesn't return a promise, so we make one\r\n    // We use getEntries to retrieve the updated data and return it as a promise\r\n    return getEntries()\r\n  })\r\n}\r\n\r\nexport default { getEntries, createEntry, updateEntry, deleteEntry }","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport phonebookService from './services/phonebookService'\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ statusMessage, setStatusMessage ] = useState('')\n  const [ statusType, setStatusType ] = useState('')\n\n  // Use effect hook to get data from db.json\n  useEffect(()=> {\n    phonebookService\n      .getEntries()\n      .then(retrievedEntries => {\n        setPersons(retrievedEntries)\n      })\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const nameExists = persons.find(person => person.name === newName) \n      !== undefined;\n    const numberExists = persons.find(person => person.number === newNumber) \n      !== undefined;\n\n    // Decide which fields to reset after each condition\n    if (nameExists && numberExists && newNumber !== '') {\n      alert(`${newName} and ${newNumber} is already added to the phonebook. ` + \n        `Please edit only one existing value at a time`);\n      setNewName('');\n      setNewNumber('');\n      // Note: can delete one name and update number on another, but confusing\n    } else if (nameExists && !numberExists) {\n      // alert(`${newName} is already added to the phonebook`);\n      if(window.confirm(`${newName} is already added to the phonebook. ` +\n        `Do you want to update ${newName}'s number?`)) {\n        // update\n        updateNumberOf(newName, newNumber)\n\n        setStatusMessage( `Updated ${newName}'s number to ${newNumber}` )\n        setStatusType('success')\n        setTimeout(() => {\n          setStatusMessage(null)\n        }, 5000)\n\n        setNewNumber('');\n      }\n      setNewName('');\n    } else if (numberExists && !nameExists && newNumber !== '') {\n      // alert(`${newNumber} is already added to the phonebook`);\n      if(window.confirm(`${newNumber} is already added to the phonebook. ` +\n        `Do you want to update ${newNumber}'s owner?`)) {\n        // update\n        updateNameOf(newNumber, newName)\n\n        setStatusMessage( `Updated ${newNumber}'s owner to ${newName}` )\n        setStatusType('success')\n        setTimeout(() => {\n          setStatusMessage(null)\n        }, 5000)\n        setNewName('');\n      }\n      setNewNumber('');\n    }  else if (nameExists && newNumber === '') {\n      alert(`${newName} is already added to the phonebook. ` + \n      `Provide a phone number to update ${newName}'s entry, ` + \n      `or create an entry with a different name.`);\n    setNewName('');\n    setNewNumber('');\n    \n    } else if (!numberExists && newName === '') {\n      alert(`You need a name with that number!`);\n    } else {\n      const phonebookEntry = {\n        name: newName,\n        number: newNumber,\n        date: new Date().toISOString()\n      }\n      \n      phonebookService\n        // use service to update server db.json\n        .createEntry(phonebookEntry) \n        // use returmed data to update local state\n        .then(returnedEntry => {\n          setPersons(persons.concat(returnedEntry))\n        }) \n\n      setStatusMessage(`Added ${newName}`)\n      setStatusType('success')\n      setTimeout(() => {\n        setStatusMessage(null)\n      }, 5000)\n\n      // Reset text fields\n      setNewName('');\n      setNewNumber('');\n    }    \n  }\n\n  // Modifies server to change number of a user with a specific name\n  const updateNumberOf = (name, number) => {\n    // Find the phonebook entry with a matching name\n    const entry = persons.find(person => person.name === name)\n    const entryID = entry.id\n\n    // Create a modified entry\n    const modifiedEntry = {...entry, number: number}\n    console.log(modifiedEntry);\n\n    phonebookService\n      .updateEntry(entryID, modifiedEntry)\n      .then(returnedEntry => {\n        setPersons(persons.map(person => {\n          if (person.id !== entryID) { return person }\n          else { return returnedEntry }\n        }))\n      })\n  }\n\n  // Modifies server to change name of a number\n  const updateNameOf = (number, name) => {\n    // Find the phonebook entry with a matching number\n    const entry = persons.find(person => person.number === number)\n    const entryID = entry.id\n\n    // Create a modified entry\n    const modifiedEntry = {...entry, name: name}\n    console.log(modifiedEntry);\n\n    phonebookService\n      .updateEntry(entryID, modifiedEntry)\n      .then(returnedEntry => {\n        setPersons(persons.map(person => {\n          if (person.id !== entryID) { return person }\n          else { return returnedEntry }\n        }))\n      })\n      .catch(error => {\n        console.log(error)\n        setStatusMessage(\n          `The entry for '${name}' was already deleted from the server`\n        )\n        setStatusType('error')\n        setTimeout(() => {\n          setStatusMessage(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== entryID))\n      })\n  }\n\n  const deleteEntryAt = (id) => {\n    const idName = (persons.find(p => p.id = id)).name;\n    // Confirm delete\n    if(window.confirm(\"Do you really want to delete this entry?\")) {\n      phonebookService\n        // Delete data from server at id and fetch server data once again\n        .deleteEntry(id)\n        // Then update state with new server data (also triggers re-render)\n        .then(retrievedEntries => {\n            console.log('entries retreived after deletion', persons)\n            setPersons(retrievedEntries)\n          }\n        )\n\n      setStatusMessage(\n        `The entry for '${idName}' was successfully removed from the server`\n      )\n      setStatusType('warning')\n      setTimeout(() => {\n        setStatusMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value);\n    setNewNumber(event.target.value); \n  }\n\n  const handleFilterChange = (event) => {\n    // console.log(event.target.value);\n    setNewFilter(event.target.value);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification status={statusMessage} statusType={statusType} />\n\n      <Filter myFilter={newFilter} eventHandler={handleFilterChange}/>\n\n      <h2>add a new</h2>\n      <Form \n        handleSubmit={handleSubmit} newName={newName} \n        handleNameChange={handleNameChange} newNumber={newNumber} \n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons \n        newFilter={newFilter} persons={persons} deleteEntryAt={deleteEntryAt}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}